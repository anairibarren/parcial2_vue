{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['notification', $props.type])\n  }, _toDisplayString($props.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$setup","visible","_createElementBlock","class","_normalizeClass","$props","type","message"],"sources":["C:\\Users\\anade\\OneDrive\\Escritorio\\vue-movie-app\\src\\components\\Notification.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"visible\" :class=\"['notification', type]\">\r\n    {{ message }}\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onUnmounted } from 'vue'\r\n\r\nconst props = defineProps({\r\n  message: String,\r\n  type: {\r\n    type: String,\r\n    default: 'success' // 'success' o 'error'\r\n  },\r\n  duration: {\r\n    type: Number,\r\n    default: 2000 // milisegundos\r\n  }\r\n})\r\n\r\nconst visible = ref(false)\r\nlet timer\r\n\r\nwatch(\r\n  () => props.message,\r\n  (newMsg) => {\r\n    if (newMsg) {\r\n      visible.value = true\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        visible.value = false\r\n      }, props.duration)\r\n    }\r\n  }\r\n)\r\n\r\nonUnmounted(() => {\r\n  clearTimeout(timer)\r\n})\r\n</script>\r\n"],"mappings":";;SACaA,MAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAEM;;IAFeC,KAAK,EAAAC,eAAA,kBAAmBC,MAAA,CAAAC,IAAI;sBAC5CD,MAAA,CAAAE,OAAO,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}