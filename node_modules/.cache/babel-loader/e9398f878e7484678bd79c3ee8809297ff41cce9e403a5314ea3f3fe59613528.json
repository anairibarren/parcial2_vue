{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"SearchBar\"], {\n    onSearch: $setup.searchMovies\n  }), _createVNode($setup[\"Filter\"], {\n    onFilter: $setup.filterByGenre\n  }), $setup.movies.length ? (_openBlock(), _createBlock($setup[\"MovieList\"], {\n    key: 0,\n    movies: $setup.movies,\n    onShowDetail: $setup.openDetail,\n    \"add-favorite\": \"addToFavorites\"\n  }, null, 8 /* PROPS */, [\"movies\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"No hay películas para mostrar.\")), _ctx.selectedMovie ? (_openBlock(), _createBlock($setup[\"MovieDetail\"], {\n    key: 2,\n    movie: _ctx.selectedMovie,\n    onClose: _cache[0] || (_cache[0] = $event => _ctx.selectedMovie = null)\n  }, null, 8 /* PROPS */, [\"movie\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","onSearch","searchMovies","onFilter","filterByGenre","movies","length","_createBlock","onShowDetail","openDetail","_hoisted_1","_ctx","selectedMovie","movie","onClose","_cache","$event"],"sources":["C:\\Users\\anade\\OneDrive\\Escritorio\\vue-movie-app\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <SearchBar @search=\"searchMovies\" />\n    <Filter @filter=\"filterByGenre\" />\n    <MovieList v-if=\"movies.length\" :movies=\"movies\" @show-detail=\"openDetail\" add-favorite=\"addToFavorites\"  />\n    <p v-else>No hay películas para mostrar.</p>\n    <MovieDetail v-if=\"selectedMovie\" :movie=\"selectedMovie\" @close=\"selectedMovie = null\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport MovieList from '../components/MovieList.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue'\nimport MovieDetail from '../views/MovieDetail.vue' \n\nconst movies = ref([])\n\nconst apiKey = process.env.VUE_APP_TMDB_API_KEY\n\nconst fetchPopular = async () => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst searchMovies = async (query) => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  if (!query) {\n    fetchPopular()\n    return\n  }\n  const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=es-ES&query=${query}`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst filterByGenre = async (genreId) => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES&with_genres=${genreId}`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst openDetail = (movie) => {\n  selectedMovie.value = movie\n}\n\nconst addToFavorites = (movie) => {\n  const stored = JSON.parse(localStorage.getItem('favorites')) || []\n  if (!stored.find(m => m.id === movie.id)) {\n    stored.push(movie)\n    localStorage.setItem('favorites', JSON.stringify(stored))\n    alert('Película agregada a favoritos!')\n  }\n}\n\nonMounted(fetchPopular)\n</script>\n"],"mappings":";;;;;uBACEA,mBAAA,CAOM,cANJC,YAAA,CAAoCC,MAAA;IAAxBC,QAAM,EAAED,MAAA,CAAAE;EAAY,IAChCH,YAAA,CAAkCC,MAAA;IAAzBG,QAAM,EAAEH,MAAA,CAAAI;EAAa,IACbJ,MAAA,CAAAK,MAAM,CAACC,MAAM,I,cAA9BC,YAAA,CAA4GP,MAAA;;IAA3EK,MAAM,EAAEL,MAAA,CAAAK,MAAM;IAAGG,YAAW,EAAER,MAAA,CAAAS,UAAU;IAAE,cAAY,EAAC;wDACxFX,mBAAA,CAA4C,KAAAY,UAAA,EAAlC,gCAA8B,IACrBC,IAAA,CAAAC,aAAa,I,cAAhCL,YAAA,CAAwFP,MAAA;;IAArDa,KAAK,EAAEF,IAAA,CAAAC,aAAa;IAAGE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}