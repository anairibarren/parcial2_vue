{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"banner-container\"\n};\nconst _hoisted_2 = {\n  class: \"banner-overlay\"\n};\nconst _hoisted_3 = {\n  class: \"search-filter-container\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_SearchBar = _resolveComponent(\"SearchBar\");\n  const _component_Filter = _resolveComponent(\"Filter\");\n  const _component_MovieList = _resolveComponent(\"MovieList\");\n  const _component_MovieDetail = _resolveComponent(\"MovieDetail\");\n  const _component_Notification = _resolveComponent(\"Notification\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", {\n    class: \"banner-title\"\n  }, \"Cineverse\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_SearchBar, {\n    onSearch: _ctx.searchMovies\n  }, null, 8 /* PROPS */, [\"onSearch\"]), _createVNode(_component_Filter, {\n    onFilter: _ctx.filterByGenre\n  }, null, 8 /* PROPS */, [\"onFilter\"])])])]), Array.isArray(_ctx.movies) && _ctx.movies.length > 0 ? (_openBlock(), _createBlock(_component_MovieList, {\n    key: 0,\n    movies: _ctx.movies,\n    favorites: _ctx.favorites,\n    onShowDetail: _ctx.openDetail,\n    onAddFavorite: _ctx.addToFavorites\n  }, null, 8 /* PROPS */, [\"movies\", \"favorites\", \"onShowDetail\", \"onAddFavorite\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"No hay películas para mostrar.\")), _ctx.selectedMovie ? (_openBlock(), _createBlock(_component_MovieDetail, {\n    key: 2,\n    movie: _ctx.selectedMovie,\n    onClose: _cache[0] || (_cache[0] = $event => _ctx.selectedMovie = null),\n    onAddFavorite: _ctx.handleFavoriteNotification\n  }, null, 8 /* PROPS */, [\"movie\", \"onAddFavorite\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Notification, {\n    message: _ctx.notification.message,\n    type: _ctx.notification.type\n  }, null, 8 /* PROPS */, [\"message\", \"type\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_SearchBar","onSearch","_ctx","searchMovies","_component_Filter","onFilter","filterByGenre","Array","isArray","movies","length","_createBlock","_component_MovieList","favorites","onShowDetail","openDetail","onAddFavorite","addToFavorites","_hoisted_4","selectedMovie","_component_MovieDetail","movie","onClose","_cache","$event","handleFavoriteNotification","_component_Notification","message","notification","type"],"sources":["C:\\Users\\anade\\OneDrive\\Escritorio\\vue-movie-app\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"banner-container\">\n      <div class=\"banner-overlay\">\n        <h1 class=\"banner-title\">Cineverse</h1>\n        <div class=\"search-filter-container\">\n          <SearchBar @search=\"searchMovies\" />\n          <Filter @filter=\"filterByGenre\" />\n        </div>\n      </div>\n    </div>\n\n    <MovieList\n      v-if=\"Array.isArray(movies) && movies.length > 0\"\n      :movies=\"movies\"\n      :favorites=\"favorites\"\n      @show-detail=\"openDetail\"\n      @add-favorite=\"addToFavorites\"\n    />\n\n\n    <p v-else>No hay películas para mostrar.</p>\n\n    <MovieDetail\n      v-if=\"selectedMovie\"\n      :movie=\"selectedMovie\"\n      @close=\"selectedMovie = null\"\n      @add-favorite=\"handleFavoriteNotification\"\n    />\n\n    <Notification :message=\"notification.message\" :type=\"notification.type\" />\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport MovieList from '../components/MovieList.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue'\nimport MovieDetail from '../views/MovieDetail.vue'\nimport Notification from '../components/Notification.vue'\n\nconst notification = ref({ message: '', type: 'success' })\nconst movies = ref([])\nconst selectedMovie = ref(null)\nconst apiKey = process.env.VUE_APP_TMDB_API_KEY //Vue CLI\nconst favorites = ref([])\n\n\nconst fetchPopular = async () => {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=$9c9d0afa2300c644bc0efbf0f1e3701a&language=es-ES`)\n  const data = await res.json()\n  if (data.results) {\n      movies.value = data.results\n      loadFavorites()\n    } else {\n      console.error('Respuesta inválida de la API:', data)\n      movies.value = []\n    }\n  } catch (error) {\n    console.error('Error al cargar películas:', error)\n    movies.value = []\n  }\n}\n\nconst loadFavorites = () => {\n  favorites.value = JSON.parse(localStorage.getItem('favorites') || '[]')\n}\n\nconst searchMovies = async (query) => {\n  if (!query) {\n    fetchPopular()\n    return\n  }\n  const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=$9c9d0afa2300c644bc0efbf0f1e3701a&language=es-ES&query=${query}`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst filterByGenre = async (genreId) => {\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES`\n  if (genreId) {\n    url += `&with_genres=${genreId}`\n  }\n  const res = await fetch(url)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst openDetail = (movie) => {\n  selectedMovie.value = movie\n}\n\nconst addToFavorites = (movie) => {\n  const stored = JSON.parse(localStorage.getItem('favorites')) || []\n  const exists = stored.find(m => m.id === movie.id)\n    if (!exists) {\n      stored.push(movie)\n      localStorage.setItem('favorites', JSON.stringify(stored))\n      notification.value = {\n        message: 'Película agregada a favoritos',\n        type: 'success'\n      }\n    } else {\n      notification.value = {\n        message: 'Ya está en favoritos',\n        type: 'error'\n      }\n    }\n    \n    loadFavorites()\n}\n\nonMounted(fetchPopular)\n</script>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAyB;;;;;;;;;;uBAJ1CC,mBAAA,CA+BM,cA9BJC,mBAAA,CAQM,OARNC,UAQM,GAPJD,mBAAA,CAMM,OANNE,UAMM,G,0BALJF,mBAAA,CAAuC;IAAnCF,KAAK,EAAC;EAAc,GAAC,WAAS,sBAClCE,mBAAA,CAGM,OAHNG,UAGM,GAFJC,YAAA,CAAoCC,oBAAA;IAAxBC,QAAM,EAAEC,IAAA,CAAAC;EAAY,uCAChCJ,YAAA,CAAkCK,iBAAA;IAAzBC,QAAM,EAAEH,IAAA,CAAAI;EAAa,sC,OAM5BC,KAAK,CAACC,OAAO,CAACN,IAAA,CAAAO,MAAM,KAAKP,IAAA,CAAAO,MAAM,CAACC,MAAM,Q,cAD9CC,YAAA,CAMEC,oBAAA;;IAJCH,MAAM,EAAEP,IAAA,CAAAO,MAAM;IACdI,SAAS,EAAEX,IAAA,CAAAW,SAAS;IACpBC,YAAW,EAAEZ,IAAA,CAAAa,UAAU;IACvBC,aAAY,EAAEd,IAAA,CAAAe;sGAIjBvB,mBAAA,CAA4C,KAAAwB,UAAA,EAAlC,gCAA8B,IAGhChB,IAAA,CAAAiB,aAAa,I,cADrBR,YAAA,CAKES,sBAAA;;IAHCC,KAAK,EAAEnB,IAAA,CAAAiB,aAAa;IACpBG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEtB,IAAA,CAAAiB,aAAa;IACpBH,aAAY,EAAEd,IAAA,CAAAuB;4FAGjB1B,YAAA,CAA0E2B,uBAAA;IAA3DC,OAAO,EAAEzB,IAAA,CAAA0B,YAAY,CAACD,OAAO;IAAGE,IAAI,EAAE3B,IAAA,CAAA0B,YAAY,CAACC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}