{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"banner-container\"\n};\nconst _hoisted_2 = {\n  class: \"banner-overlay\"\n};\nconst _hoisted_3 = {\n  class: \"search-filter-container\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Notification = _resolveComponent(\"Notification\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"banner-title\"\n  }, \"Cineverse\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"SearchBar\"], {\n    onSearch: $setup.searchMovies\n  }), _createVNode($setup[\"Filter\"], {\n    onFilter: $setup.filterByGenre\n  })])])]), $setup.movies.length ? (_openBlock(), _createBlock($setup[\"MovieList\"], {\n    key: 0,\n    movies: $setup.movies,\n    onShowDetail: $setup.openDetail,\n    onAddFavorite: $setup.addToFavorites\n  }, null, 8 /* PROPS */, [\"movies\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"No hay películas para mostrar.\")), $setup.selectedMovie ? (_openBlock(), _createBlock($setup[\"MovieDetail\"], {\n    key: 2,\n    movie: $setup.selectedMovie,\n    onClose: _cache[0] || (_cache[0] = $event => $setup.selectedMovie = null)\n  }, null, 8 /* PROPS */, [\"movie\"])) : _createCommentVNode(\"v-if\", true)]), _ctx.notification.message ? (_openBlock(), _createBlock(_component_Notification, {\n    key: 0,\n    message: _ctx.notification.message,\n    type: _ctx.notification.type,\n    onClose: _cache[1] || (_cache[1] = $event => _ctx.notification.message = '')\n  }, null, 8 /* PROPS */, [\"message\", \"type\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","$setup","onSearch","searchMovies","onFilter","filterByGenre","movies","length","_createBlock","onShowDetail","openDetail","onAddFavorite","addToFavorites","_createElementBlock","_hoisted_4","selectedMovie","movie","onClose","_cache","$event","_ctx","notification","message","_component_Notification","type"],"sources":["C:\\Users\\anade\\OneDrive\\Escritorio\\vue-movie-app\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"banner-container\">\n      <div class=\"banner-overlay\">\n        <h1 class=\"banner-title\">Cineverse</h1>\n        <div class=\"search-filter-container\">\n          <SearchBar @search=\"searchMovies\" />\n          <Filter @filter=\"filterByGenre\" />\n        </div>\n      </div>\n    </div>\n\n    <MovieList v-if=\"movies.length\" :movies=\"movies\" @show-detail=\"openDetail\" \n      @add-favorite=\"addToFavorites\" />\n    <p v-else>No hay películas para mostrar.</p>\n    \n    <MovieDetail v-if=\"selectedMovie\" :movie=\"selectedMovie\" @close=\"selectedMovie = null\" />\n  </div>\n\n  <Notification\n  v-if=\"notification.message\"\n  :message=\"notification.message\"\n  :type=\"notification.type\"\n  @close=\"notification.message = ''\"\n/>\n\n</template>\n\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport MovieList from '../components/MovieList.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue'\nimport MovieDetail from '../views/MovieDetail.vue' \n\n\n\nconst movies = ref([])\nconst selectedMovie = ref(null)\n\nconst apiKey = process.env.VUE_APP_TMDB_API_KEY\n\nconst fetchPopular = async () => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst searchMovies = async (query) => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  if (!query) {\n    fetchPopular()\n    return\n  }\n  const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=es-ES&query=${query}`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst filterByGenre = async (genreId) => {\n  const apiKey = process.env.VUE_APP_TMDB_API_KEY\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES`\n\n  if (genreId) {\n    url += `&with_genres=${genreId}`\n  }\n\n  const res = await fetch(url)\n  const data = await res.json()\n  movies.value = data.results\n}\n\n\nconst openDetail = (movie) => {\n  selectedMovie.value = movie\n}\n\nconst addToFavorites = (movie) => {\n  const stored = JSON.parse(localStorage.getItem('favorites')) || []\n  if (!stored.find(m => m.id === movie.id)) {\n    stored.push(movie)\n    localStorage.setItem('favorites', JSON.stringify(stored))\n    alert('Película agregada a favoritos!')\n  }\n}\n\nonMounted(fetchPopular)\n</script>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAyB;;;;;;6DAJ1CC,mBAAA,CAgBM,cAfJA,mBAAA,CAQM,OARNC,UAQM,GAPJD,mBAAA,CAMM,OANNE,UAMM,G,0BALJF,mBAAA,CAAuC;IAAnCD,KAAK,EAAC;EAAc,GAAC,WAAS,sBAClCC,mBAAA,CAGM,OAHNG,UAGM,GAFJC,YAAA,CAAoCC,MAAA;IAAxBC,QAAM,EAAED,MAAA,CAAAE;EAAY,IAChCH,YAAA,CAAkCC,MAAA;IAAzBG,QAAM,EAAEH,MAAA,CAAAI;EAAa,G,OAKnBJ,MAAA,CAAAK,MAAM,CAACC,MAAM,I,cAA9BC,YAAA,CACmCP,MAAA;;IADFK,MAAM,EAAEL,MAAA,CAAAK,MAAM;IAAGG,YAAW,EAAER,MAAA,CAAAS,UAAU;IACtEC,aAAY,EAAEV,MAAA,CAAAW;wDACjBC,mBAAA,CAA4C,KAAAC,UAAA,EAAlC,gCAA8B,IAErBb,MAAA,CAAAc,aAAa,I,cAAhCP,YAAA,CAAyFP,MAAA;;IAAtDe,KAAK,EAAEf,MAAA,CAAAc,aAAa;IAAGE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAElB,MAAA,CAAAc,aAAa;6EAI1EK,IAAA,CAAAC,YAAY,CAACC,OAAO,I,cAD1Bd,YAAA,CAKAe,uBAAA;;IAHCD,OAAO,EAAEF,IAAA,CAAAC,YAAY,CAACC,OAAO;IAC7BE,IAAI,EAAEJ,IAAA,CAAAC,YAAY,CAACG,IAAI;IACvBP,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}