{"ast":null,"code":"import { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"SearchBar\"], {\n    onSearch: $setup.searchMovies\n  }), _createVNode($setup[\"Filter\"], {\n    onFilter: $setup.filterByGenre\n  }), $setup.movies.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.movies, movie => {\n    return _openBlock(), _createBlock($setup[\"MovieCard\"], {\n      key: movie.id,\n      movie: movie\n    }, null, 8 /* PROPS */, [\"movie\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","onSearch","searchMovies","onFilter","filterByGenre","movies","length","_hoisted_1","_Fragment","_renderList","movie","_createBlock","key","id"],"sources":["C:\\Users\\anade\\OneDrive\\Escritorio\\vue-movie-app\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <SearchBar @search=\"searchMovies\" />\n    <Filter @filter=\"filterByGenre\" />\n    <div v-if=\"movies.length\">\n      <MovieCard v-for=\"movie in movies\" :key=\"movie.id\" :movie=\"movie\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport MovieCard from '../components/MovieCard.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue' \n\nconst movies = ref([])\n\nconst fetchPopular = async () => {\n  const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n  const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`)\n  movies.value = res.data.results\n}\n\nconst searchMovies = async (query) => {\n  const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n  const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=es-ES&query=${query}`)\n  movies.value = res.data.results\n}\n\nconst filterByGenre = async (genreId) => {\n  const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n  const res = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES&with_genres=${genreId}`)\n  movies.value = res.data.results\n}\n\nonMounted(fetchPopular)\n</script>\n"],"mappings":";;;;;uBACEA,mBAAA,CAMM,cALJC,YAAA,CAAoCC,MAAA;IAAxBC,QAAM,EAAED,MAAA,CAAAE;EAAY,IAChCH,YAAA,CAAkCC,MAAA;IAAzBG,QAAM,EAAEH,MAAA,CAAAI;EAAa,IACnBJ,MAAA,CAAAK,MAAM,CAACC,MAAM,I,cAAxBR,mBAAA,CAEM,OAAAS,UAAA,I,kBADJT,mBAAA,CAAoEU,SAAA,QAAAC,WAAA,CAAzCT,MAAA,CAAAK,MAAM,EAAfK,KAAK;yBAAvBC,YAAA,CAAoEX,MAAA;MAAhCY,GAAG,EAAEF,KAAK,CAACG,EAAE;MAAGH,KAAK,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}