{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport MovieList from '../components/MovieList.vue';\nimport SearchBar from '../components/SearchBar.vue';\nimport Filter from '../components/Filter.vue';\nimport MovieDetail from '../views/MovieDetail.vue';\nimport Notification from '../components/Notification.vue';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const notification = ref({\n      message: '',\n      type: 'success'\n    });\n    const movies = ref([]);\n    const selectedMovie = ref(null);\n    const apiKey = process.env.VUE_APP_TMDB_API_KEY;\n    const fetchPopular = async () => {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`);\n      const data = await res.json();\n      movies.value = data.results;\n      loadFavorites();\n    };\n    const searchMovies = async query => {\n      if (!query) {\n        fetchPopular();\n        return;\n      }\n      const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=es-ES&query=${query}`);\n      const data = await res.json();\n      movies.value = data.results;\n    };\n    const filterByGenre = async genreId => {\n      let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES`;\n      if (genreId) {\n        url += `&with_genres=${genreId}`;\n      }\n      const res = await fetch(url);\n      const data = await res.json();\n      movies.value = data.results;\n    };\n    const openDetail = movie => {\n      selectedMovie.value = movie;\n    };\n    const addToFavorites = movie => {\n      const stored = JSON.parse(localStorage.getItem('favorites')) || [];\n      if (!stored.find(m => m.id === movie.id)) {\n        stored.push(movie);\n        localStorage.setItem('favorites', JSON.stringify(stored));\n        notification.value = {\n          message: 'Película agregada a favoritos',\n          type: 'success'\n        };\n      } else {\n        notification.value = {\n          message: 'Ya está en favoritos',\n          type: 'error'\n        };\n      }\n    };\n    onMounted(fetchPopular);\n    const __returned__ = {\n      notification,\n      movies,\n      selectedMovie,\n      apiKey,\n      fetchPopular,\n      searchMovies,\n      filterByGenre,\n      openDetail,\n      addToFavorites,\n      ref,\n      onMounted,\n      MovieList,\n      SearchBar,\n      Filter,\n      MovieDetail,\n      Notification\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","MovieList","SearchBar","Filter","MovieDetail","Notification","notification","message","type","movies","selectedMovie","apiKey","process","env","VUE_APP_TMDB_API_KEY","fetchPopular","res","fetch","data","json","value","results","loadFavorites","searchMovies","query","filterByGenre","genreId","url","openDetail","movie","addToFavorites","stored","JSON","parse","localStorage","getItem","find","m","id","push","setItem","stringify"],"sources":["C:/Users/anade/OneDrive/Escritorio/vue-movie-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"banner-container\">\n      <div class=\"banner-overlay\">\n        <h1 class=\"banner-title\">Cineverse</h1>\n        <div class=\"search-filter-container\">\n          <SearchBar @search=\"searchMovies\" />\n          <Filter @filter=\"filterByGenre\" />\n        </div>\n      </div>\n    </div>\n\n    <MovieList\n      v-if=\"movies.length\"\n      :movies=\"movies\"\n      @show-detail=\"openDetail\"\n      @add-favorite=\"addToFavorites\"\n    />\n    <p v-else>No hay películas para mostrar.</p>\n\n    <MovieDetail\n      v-if=\"selectedMovie\"\n      :movie=\"selectedMovie\"\n      @close=\"selectedMovie = null\"\n      @add-favorite=\"handleFavoriteNotification\"\n    />\n\n    <Notification :message=\"notification.message\" :type=\"notification.type\" />\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport MovieList from '../components/MovieList.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue'\nimport MovieDetail from '../views/MovieDetail.vue'\nimport Notification from '../components/Notification.vue'\n\nconst notification = ref({ message: '', type: 'success' })\nconst movies = ref([])\nconst selectedMovie = ref(null)\nconst apiKey = process.env.VUE_APP_TMDB_API_KEY\n\nconst fetchPopular = async () => {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`)\n  const data = await res.json()\n  movies.value = data.results\n  loadFavorites()\n}\n\n\n\nconst searchMovies = async (query) => {\n  if (!query) {\n    fetchPopular()\n    return\n  }\n  const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=es-ES&query=${query}`)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst filterByGenre = async (genreId) => {\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES`\n  if (genreId) {\n    url += `&with_genres=${genreId}`\n  }\n  const res = await fetch(url)\n  const data = await res.json()\n  movies.value = data.results\n}\n\nconst openDetail = (movie) => {\n  selectedMovie.value = movie\n}\n\nconst addToFavorites = (movie) => {\n  const stored = JSON.parse(localStorage.getItem('favorites')) || []\n  if (!stored.find(m => m.id === movie.id)) {\n    stored.push(movie)\n    localStorage.setItem('favorites', JSON.stringify(stored))\n    notification.value = {\n      message: 'Película agregada a favoritos',\n      type: 'success'\n    }\n  } else {\n    notification.value = {\n      message: 'Ya está en favoritos',\n      type: 'error'\n    }\n  }\n}\n\nonMounted(fetchPopular)\n</script>\n"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,SAAS,MAAM,6BAA4B;AAClD,OAAOC,SAAS,MAAM,6BAA4B;AAClD,OAAOC,MAAM,MAAM,0BAAyB;AAC5C,OAAOC,WAAW,MAAM,0BAAyB;AACjD,OAAOC,YAAY,MAAM,gCAA+B;;;;;;;IAExD,MAAMC,YAAY,GAAGP,GAAG,CAAC;MAAEQ,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC;IACzD,MAAMC,MAAM,GAAGV,GAAG,CAAC,EAAE;IACrB,MAAMW,aAAa,GAAGX,GAAG,CAAC,IAAI;IAC9B,MAAMY,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAmB;IAE9C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sDAAsDN,MAAM,iBAAiB;MACrG,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC;MAC5BV,MAAM,CAACW,KAAK,GAAGF,IAAI,CAACG,OAAM;MAC1BC,aAAa,CAAC;IAChB;IAIA,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;MACpC,IAAI,CAACA,KAAK,EAAE;QACVT,YAAY,CAAC;QACb;MACF;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqDN,MAAM,yBAAyBa,KAAK,EAAE;MACnH,MAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC;MAC5BV,MAAM,CAACW,KAAK,GAAGF,IAAI,CAACG,OAAM;IAC5B;IAEA,MAAMI,aAAa,GAAG,MAAOC,OAAO,IAAK;MACvC,IAAIC,GAAG,GAAG,uDAAuDhB,MAAM,iBAAgB;MACvF,IAAIe,OAAO,EAAE;QACXC,GAAG,IAAI,gBAAgBD,OAAO,EAAC;MACjC;MACA,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAACU,GAAG;MAC3B,MAAMT,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC;MAC5BV,MAAM,CAACW,KAAK,GAAGF,IAAI,CAACG,OAAM;IAC5B;IAEA,MAAMO,UAAU,GAAIC,KAAK,IAAK;MAC5BnB,aAAa,CAACU,KAAK,GAAGS,KAAI;IAC5B;IAEA,MAAMC,cAAc,GAAID,KAAK,IAAK;MAChC,MAAME,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAC;MACjE,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKT,KAAK,CAACS,EAAE,CAAC,EAAE;QACxCP,MAAM,CAACQ,IAAI,CAACV,KAAK;QACjBK,YAAY,CAACM,OAAO,CAAC,WAAW,EAAER,IAAI,CAACS,SAAS,CAACV,MAAM,CAAC;QACxDzB,YAAY,CAACc,KAAK,GAAG;UACnBb,OAAO,EAAE,+BAA+B;UACxCC,IAAI,EAAE;QACR;MACF,CAAC,MAAM;QACLF,YAAY,CAACc,KAAK,GAAG;UACnBb,OAAO,EAAE,sBAAsB;UAC/BC,IAAI,EAAE;QACR;MACF;IACF;IAEAR,SAAS,CAACe,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}