{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport MovieCard from '../components/MovieCard.vue';\nimport Notification from '../components/Notification.vue';\nexport default {\n  __name: 'FavoritesView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const favorites = ref([]);\n    const notification = ref({\n      message: null,\n      type: null\n    });\n    const loadFavorites = () => {\n      favorites.value = JSON.parse(localStorage.getItem('favorites') || '[]');\n    };\n    const removeFromFavorites = movieToRemove => {\n      favorites.value = favorites.value.filter(m => m.id !== movieToRemove.id);\n      localStorage.setItem('favorites', JSON.stringify(favorites.value));\n      notification.value = {\n        message: 'Película eliminada con éxito',\n        type: 'black'\n      };\n    };\n    onMounted(loadFavorites);\n    const __returned__ = {\n      favorites,\n      notification,\n      loadFavorites,\n      removeFromFavorites,\n      ref,\n      onMounted,\n      MovieCard,\n      Notification\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","MovieCard","Notification","favorites","notification","message","type","loadFavorites","value","JSON","parse","localStorage","getItem","removeFromFavorites","movieToRemove","filter","m","id","setItem","stringify"],"sources":["C:/Users/anade/OneDrive/Escritorio/vue-movie-app/src/views/FavoritesView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Favoritos</h1>\r\n\r\n    <!-- Si no hay favoritos -->\r\n    <div v-if=\"favorites.length === 0\" class=\"empty-favorites\">\r\n      <h2>¡Ups! No hay películas agregadas.</h2>\r\n      <p>Por favor, vuelve al inicio para agregar tus películas favoritas.</p>\r\n      <router-link to=\"/\" class=\"btn-back\">\r\n        ← Volver al inicio\r\n      </router-link>\r\n    </div>\r\n\r\n    <!-- Si hay favoritos -->\r\n    <div v-else class=\"favorites-container\">\r\n      <MovieCard\r\n        v-for=\"movie in favorites\"\r\n        :key=\"movie.id\"\r\n        :movie=\"movie\"\r\n        :showOnlyFavorite=\"true\"\r\n        @remove-favorite=\"removeFromFavorites\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Notificacion -->\r\n    <Notification\r\n  v-if=\"notification.message\"\r\n  :message=\"notification.message\"\r\n  :type=\"notification.type\"  \r\n  @close=\"notification.value = { message: null, type: null }\"\r\n/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport MovieCard from '../components/MovieCard.vue'\r\nimport Notification from '../components/Notification.vue'\r\n\r\nconst favorites = ref([])\r\nconst notification = ref({ message: null, type: null })\r\n\r\nconst loadFavorites = () => {\r\n  favorites.value = JSON.parse(localStorage.getItem('favorites') || '[]')\r\n}\r\n\r\nconst removeFromFavorites = (movieToRemove) => {\r\n  favorites.value = favorites.value.filter(m => m.id !== movieToRemove.id)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites.value))\r\n\r\n  notification.value = {\r\n    message: 'Película eliminada con éxito',\r\n    type: 'black'\r\n  }\r\n}\r\n\r\n\r\nonMounted(loadFavorites)\r\n</script>\r\n"],"mappings":"AAoCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,MAAM,gCAAgC;;;;;;;IAEzD,MAAMC,SAAS,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMK,YAAY,GAAGL,GAAG,CAAC;MAAEM,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAEvD,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BJ,SAAS,CAACK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IACzE,CAAC;IAED,MAAMC,mBAAmB,GAAIC,aAAa,IAAK;MAC7CX,SAAS,CAACK,KAAK,GAAGL,SAAS,CAACK,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,aAAa,CAACG,EAAE,CAAC;MACxEN,YAAY,CAACO,OAAO,CAAC,WAAW,EAAET,IAAI,CAACU,SAAS,CAAChB,SAAS,CAACK,KAAK,CAAC,CAAC;MAElEJ,YAAY,CAACI,KAAK,GAAG;QACnBH,OAAO,EAAE,8BAA8B;QACvCC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IAGDN,SAAS,CAACO,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}