{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport MovieList from '../components/MovieList.vue';\nimport SearchBar from '../components/SearchBar.vue';\nimport Filter from '../components/Filter.vue';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const movies = ref([]);\n    const fetchPopular = async () => {\n      const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY;\n      const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`);\n      movies.value = res.data.results;\n    };\n    const searchMovies = async query => {\n      try {\n        const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY;\n        if (!query) {\n          fetchPopular();\n          return;\n        }\n        const res = await axios.get(`https://api.themoviedb.org/3/search/movie`, {\n          params: {\n            api_key: apiKey,\n            language: 'es-ES',\n            query\n          }\n        });\n        movies.value = res.data.results;\n      } catch (error) {\n        console.error('Error buscando películas:', error);\n      }\n    };\n    const filterByGenre = async genreId => {\n      const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY;\n      const res = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES&with_genres=${genreId}`);\n      movies.value = res.data.results;\n    };\n    onMounted(fetchPopular);\n    const __returned__ = {\n      movies,\n      fetchPopular,\n      searchMovies,\n      filterByGenre,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      MovieList,\n      SearchBar,\n      Filter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","MovieList","SearchBar","Filter","movies","fetchPopular","apiKey","import","meta","env","VITE_TMDB_API_KEY","process","VUE_APP_TMDB_API_KEY","res","get","value","data","results","searchMovies","query","params","api_key","language","error","console","filterByGenre","genreId"],"sources":["C:/Users/anade/OneDrive/Escritorio/vue-movie-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <SearchBar @search=\"searchMovies\" />\n    <Filter @filter=\"filterByGenre\" />\n    <MovieList v-if=\"movies.length\" :movies=\"movies\" />\n    <p v-else>No hay películas para mostrar.</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport MovieList from '../components/MovieList.vue'\nimport SearchBar from '../components/SearchBar.vue'\nimport Filter from '../components/Filter.vue' \n\nconst movies = ref([\n])\n\n\nconst fetchPopular = async () => {\n  const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n  const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=es-ES`)\n  movies.value = res.data.results\n}\n\nconst searchMovies = async (query) => {\n  try {\n    const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n    if (!query) {\n      fetchPopular()\n      return\n    }\n    const res = await axios.get(`https://api.themoviedb.org/3/search/movie`, {\n      params: {\n        api_key: apiKey,\n        language: 'es-ES',\n        query\n      }\n    })\n    movies.value = res.data.results\n  } catch (error) {\n    console.error('Error buscando películas:', error)\n  }\n}\n\nconst filterByGenre = async (genreId) => {\n  const apiKey = import.meta.env.VITE_TMDB_API_KEY || process.env.VUE_APP_TMDB_API_KEY\n  const res = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=es-ES&with_genres=${genreId}`)\n  movies.value = res.data.results\n}\n\nonMounted(fetchPopular)\n</script>"],"mappings":"AAUA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,KAAK,MAAM,OAAM;AACxB,OAAOC,SAAS,MAAM,6BAA4B;AAClD,OAAOC,SAAS,MAAM,6BAA4B;AAClD,OAAOC,MAAM,MAAM,0BAA0B;;;;;;;IAE7C,MAAMC,MAAM,GAAGN,GAAG,CAAC,EAClB;IAGD,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,iBAAiB,IAAIC,OAAO,CAACF,GAAG,CAACG,oBAAmB;MACnF,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sDAAsDR,MAAM,iBAAiB;MACzGF,MAAM,CAACW,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,OAAM;IAChC;IAEA,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;MACpC,IAAI;QACF,MAAMb,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,iBAAiB,IAAIC,OAAO,CAACF,GAAG,CAACG,oBAAmB;QACnF,IAAI,CAACO,KAAK,EAAE;UACVd,YAAY,CAAC;UACb;QACF;QACA,MAAMQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,2CAA2C,EAAE;UACvEM,MAAM,EAAE;YACNC,OAAO,EAAEf,MAAM;YACfgB,QAAQ,EAAE,OAAO;YACjBH;UACF;QACF,CAAC;QACDf,MAAM,CAACW,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,OAAM;MAChC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF;IAEA,MAAME,aAAa,GAAG,MAAOC,OAAO,IAAK;MACvC,MAAMpB,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,iBAAiB,IAAIC,OAAO,CAACF,GAAG,CAACG,oBAAmB;MACnF,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,uDAAuDR,MAAM,+BAA+BoB,OAAO,EAAE;MACjItB,MAAM,CAACW,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,OAAM;IAChC;IAEAlB,SAAS,CAACM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}